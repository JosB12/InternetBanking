// <auto-generated />
using System;
using InternetBanking.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternetBanking.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
<<<<<<<< HEAD:InternetBanking.Infrastructure.Persistence/Migrations/20241115183920_InitialMigration.Designer.cs
<<<<<<<< HEAD:InternetBanking.Infrastructure.Persistence/Migrations/20241116010156_InitialMigration.Designer.cs
    [Migration("20241116010156_InitialMigration")]
========
    [Migration("20241115183920_InitialMigration")]
>>>>>>>> origin/client-beneficiaries-prueba:InternetBanking.Infrastructure.Persistence/Migrations/20241115183920_InitialMigration.Designer.cs
========
    [Migration("20241115050942_InitialMigration")]
>>>>>>>> origin/client-cash-advances:InternetBanking.Infrastructure.Persistence/Migrations/20241115050942_InitialMigration.Designer.cs
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.AvancesEfectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaAvance")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCuentaDestino")
                        .HasColumnType("int");

                    b.Property<int>("IdTarjetaCredito")
                        .HasColumnType("int");

                    b.Property<decimal>("Interes")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCuentaDestino");

                    b.HasIndex("IdTarjetaCredito");

                    b.ToTable("AvancesEfectivo", (string)null);
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Beneficiarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CuentaBeneficiarioId")
                        .HasColumnType("int");

                    b.Property<int>("IdCuentaBeneficiario")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CuentaBeneficiarioId");

                    b.ToTable("Beneficiarios", (string)null);
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.CuentasAhorro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.Property<int>("IdProductoFinanciero")
                        .HasColumnType("int");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdProductoFinanciero")
                        .IsUnique();

                    b.ToTable("CuentasAhorro", (string)null);
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Pagos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdBeneficiario")
                        .HasColumnType("int");

                    b.Property<int?>("IdCuentaDestino")
                        .HasColumnType("int");

                    b.Property<int?>("IdCuentaPago")
                        .HasColumnType("int");

                    b.Property<int?>("IdProductoFinanciero")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoPago")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdBeneficiario");

                    b.HasIndex("IdCuentaDestino");

                    b.HasIndex("IdCuentaPago");

                    b.ToTable("Pagos", (string)null);
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Prestamos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DeudaRestante")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProductoFinanciero")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoPrestamo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdProductoFinanciero")
                        .IsUnique();

                    b.ToTable("Prestamos", (string)null);
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.ProductosFinancieros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroProducto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TipoProducto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductosFinancieros", (string)null);
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.TarjetasCredito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DeudaActual")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdProductoFinanciero")
                        .HasColumnType("int");

                    b.Property<decimal>("LimiteCredito")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroTarjeta")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("IdProductoFinanciero")
                        .IsUnique();

                    b.ToTable("TarjetasCredito", (string)null);
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Transacciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCuentaDestino")
                        .HasColumnType("int");

                    b.Property<int?>("IdCuentaOrigen")
                        .HasColumnType("int");

                    b.Property<int?>("IdProductoFinanciero")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoTransaccion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCuentaDestino");

                    b.HasIndex("IdCuentaOrigen");

                    b.ToTable("Transacciones", (string)null);
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.AvancesEfectivo", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.CuentasAhorro", "CuentaDestino")
                        .WithMany("AvancesEfectivo")
                        .HasForeignKey("IdCuentaDestino")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InternetBanking.Core.Domain.Entities.TarjetasCredito", "TarjetaCredito")
                        .WithMany("AvancesEfectivo")
                        .HasForeignKey("IdTarjetaCredito")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CuentaDestino");

                    b.Navigation("TarjetaCredito");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Beneficiarios", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.CuentasAhorro", "CuentaBeneficiario")
                        .WithMany()
                        .HasForeignKey("CuentaBeneficiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CuentaBeneficiario");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.CuentasAhorro", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.ProductosFinancieros", "ProductoFinanciero")
                        .WithOne("CuentaAhorro")
                        .HasForeignKey("InternetBanking.Core.Domain.Entities.CuentasAhorro", "IdProductoFinanciero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductoFinanciero");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Pagos", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.Beneficiarios", "Beneficiario")
                        .WithMany("Pagos")
                        .HasForeignKey("IdBeneficiario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InternetBanking.Core.Domain.Entities.CuentasAhorro", "CuentaDestino")
                        .WithMany()
                        .HasForeignKey("IdCuentaDestino")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InternetBanking.Core.Domain.Entities.CuentasAhorro", "CuentaPago")
                        .WithMany("Pagos")
                        .HasForeignKey("IdCuentaPago")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Beneficiario");

                    b.Navigation("CuentaDestino");

                    b.Navigation("CuentaPago");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Prestamos", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.ProductosFinancieros", "ProductoFinanciero")
                        .WithOne("Prestamo")
                        .HasForeignKey("InternetBanking.Core.Domain.Entities.Prestamos", "IdProductoFinanciero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductoFinanciero");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.TarjetasCredito", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.ProductosFinancieros", "ProductoFinanciero")
                        .WithOne("TarjetaCredito")
                        .HasForeignKey("InternetBanking.Core.Domain.Entities.TarjetasCredito", "IdProductoFinanciero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductoFinanciero");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Transacciones", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.CuentasAhorro", "CuentaDestino")
                        .WithMany("TransaccionesDestino")
                        .HasForeignKey("IdCuentaDestino")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InternetBanking.Core.Domain.Entities.CuentasAhorro", "CuentaOrigen")
                        .WithMany("TransaccionesOrigen")
                        .HasForeignKey("IdCuentaOrigen")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CuentaDestino");

                    b.Navigation("CuentaOrigen");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Beneficiarios", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.CuentasAhorro", b =>
                {
                    b.Navigation("AvancesEfectivo");

                    b.Navigation("Pagos");

                    b.Navigation("TransaccionesDestino");

                    b.Navigation("TransaccionesOrigen");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.ProductosFinancieros", b =>
                {
                    b.Navigation("CuentaAhorro")
                        .IsRequired();

                    b.Navigation("Prestamo")
                        .IsRequired();

                    b.Navigation("TarjetaCredito")
                        .IsRequired();
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.TarjetasCredito", b =>
                {
                    b.Navigation("AvancesEfectivo");
                });
#pragma warning restore 612, 618
        }
    }
}
