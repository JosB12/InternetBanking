// <auto-generated />
using System;
using InternetBanking.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternetBanking.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241110160616_AddRestrictDeleteToTarjetasCredito")]
    partial class AddRestrictDeleteToTarjetasCredito
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.AvancesEfectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCuentaDestino")
                        .HasColumnType("int");

                    b.Property<int>("IdTarjetaCredito")
                        .HasColumnType("int");

                    b.Property<decimal>("Interes")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCuentaDestino");

                    b.HasIndex("IdTarjetaCredito");

                    b.ToTable("AvancesEfectivo");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Beneficiarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCuentaBeneficiario")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCuentaBeneficiario");

                    b.ToTable("Beneficiarios");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.CuentasAhorro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.Property<int>("IdProductoFinanciero")
                        .HasColumnType("int");

                    b.Property<string>("IdentificadorUnico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProductoFinanciero");

                    b.ToTable("CuentasAhorro");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Pagos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdBeneficiario")
                        .HasColumnType("int");

                    b.Property<int?>("IdCuentaPago")
                        .HasColumnType("int");

                    b.Property<int?>("IdProductoFinanciero")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdBeneficiario");

                    b.HasIndex("IdCuentaPago");

                    b.HasIndex("IdProductoFinanciero");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Prestamos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DeudaRestante")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProductoFinanciero")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoPrestamo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdProductoFinanciero")
                        .IsUnique();

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.ProductosFinancieros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CuentaAhorroId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificadorUnico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PrestamoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CuentaAhorroId");

                    b.HasIndex("PrestamoId");

                    b.ToTable("ProductosFinancieros");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.TarjetasCredito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DeudaActual")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdProductoFinanciero")
                        .HasColumnType("int");

                    b.Property<string>("IdentificadorUnico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LimiteCredito")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroTarjeta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProductoFinanciero")
                        .IsUnique();

                    b.ToTable("TarjetasCredito");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Transacciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCuentaDestino")
                        .HasColumnType("int");

                    b.Property<int?>("IdCuentaOrigen")
                        .HasColumnType("int");

                    b.Property<int?>("IdProductoFinanciero")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoTransaccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCuentaDestino");

                    b.HasIndex("IdCuentaOrigen");

                    b.HasIndex("IdProductoFinanciero");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.AvancesEfectivo", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.CuentasAhorro", "CuentaDestino")
                        .WithMany()
                        .HasForeignKey("IdCuentaDestino")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternetBanking.Core.Domain.Entities.TarjetasCredito", "TarjetaCredito")
                        .WithMany()
                        .HasForeignKey("IdTarjetaCredito")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CuentaDestino");

                    b.Navigation("TarjetaCredito");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Beneficiarios", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.CuentasAhorro", "CuentaBeneficiario")
                        .WithMany()
                        .HasForeignKey("IdCuentaBeneficiario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CuentaBeneficiario");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.CuentasAhorro", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.ProductosFinancieros", "ProductoFinanciero")
                        .WithMany("CuentasAhorro")
                        .HasForeignKey("IdProductoFinanciero")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductoFinanciero");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Pagos", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.Beneficiarios", "Beneficiario")
                        .WithMany()
                        .HasForeignKey("IdBeneficiario")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("InternetBanking.Core.Domain.Entities.CuentasAhorro", "CuentaPago")
                        .WithMany()
                        .HasForeignKey("IdCuentaPago")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("InternetBanking.Core.Domain.Entities.ProductosFinancieros", "ProductoFinanciero")
                        .WithMany()
                        .HasForeignKey("IdProductoFinanciero")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Beneficiario");

                    b.Navigation("CuentaPago");

                    b.Navigation("ProductoFinanciero");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Prestamos", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.ProductosFinancieros", "ProductoFinanciero")
                        .WithOne()
                        .HasForeignKey("InternetBanking.Core.Domain.Entities.Prestamos", "IdProductoFinanciero")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductoFinanciero");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.ProductosFinancieros", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.CuentasAhorro", "CuentaAhorro")
                        .WithMany()
                        .HasForeignKey("CuentaAhorroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternetBanking.Core.Domain.Entities.Prestamos", "Prestamo")
                        .WithMany()
                        .HasForeignKey("PrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CuentaAhorro");

                    b.Navigation("Prestamo");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.TarjetasCredito", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.ProductosFinancieros", "ProductoFinanciero")
                        .WithOne("TarjetaCredito")
                        .HasForeignKey("InternetBanking.Core.Domain.Entities.TarjetasCredito", "IdProductoFinanciero")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ProductoFinanciero");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Transacciones", b =>
                {
                    b.HasOne("InternetBanking.Core.Domain.Entities.CuentasAhorro", "CuentaDestino")
                        .WithMany()
                        .HasForeignKey("IdCuentaDestino")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InternetBanking.Core.Domain.Entities.CuentasAhorro", "CuentaOrigen")
                        .WithMany()
                        .HasForeignKey("IdCuentaOrigen")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InternetBanking.Core.Domain.Entities.ProductosFinancieros", "ProductoFinanciero")
                        .WithMany()
                        .HasForeignKey("IdProductoFinanciero")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CuentaDestino");

                    b.Navigation("CuentaOrigen");

                    b.Navigation("ProductoFinanciero");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.ProductosFinancieros", b =>
                {
                    b.Navigation("CuentasAhorro");

                    b.Navigation("TarjetaCredito")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
